// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//------------------------------------------------------
// User and Authentication Models
//------------------------------------------------------

model User {
  id            Int            @id @default(autoincrement())
  name          String
  email         String
  password      String
  
  // Relations
  developer     Developer?
  chatbots      Chatbot[]
  conversations Conversation[]
}

model Developer {
  id      Int      @id @default(autoincrement())
  user    User     @relation(fields: [userId], references: [id])
  userId  Int      @unique
  
  // Relations
  plugins Plugin[]
}

//------------------------------------------------------
// Plugin System Models
//------------------------------------------------------

model Plugin {
  id          Int             @id @default(autoincrement())
  name        String
  code        String
  version     Int             @default(1)
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  
  // Relations
  developer   Developer       @relation(fields: [developerId], references: [id])
  developerId Int
  chatbots    ChatbotPlugins[]
  versions    PluginVersion[]
}

model PluginVersion {
  id          Int       @id @default(autoincrement())
  versionNumber Int
  name        String
  code        String
  createdAt   DateTime  @default(now())
  
  // Relations
  plugin      Plugin    @relation(fields: [pluginId], references: [id], onDelete: Cascade)
  pluginId    Int

  @@unique([pluginId, versionNumber])
}

//------------------------------------------------------
// Chatbot Models
//------------------------------------------------------

model Chatbot {
  id          Int              @id @default(autoincrement())
  name        String
  description String?
  avatar      String?          // URL or path to avatar image
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  
  // Relations
  user        User             @relation(fields: [userId], references: [id])
  userId      Int
  plugins     ChatbotPlugins[]
  conversations Conversation[]
}

model ChatbotPlugins {
  chatbotId Int
  pluginId  Int
  enabled   Boolean @default(true)
  
  // Relations
  chatbot   Chatbot @relation(fields: [chatbotId], references: [id])
  plugin    Plugin  @relation(fields: [pluginId], references: [id])

  @@id([chatbotId, pluginId])
}

//------------------------------------------------------
// Conversation and Messaging Models
//------------------------------------------------------

model Conversation {
  id         Int       @id @default(autoincrement())
  title      String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  
  // Relations
  user       User      @relation(fields: [userId], references: [id])
  userId     Int
  chatbot    Chatbot   @relation(fields: [chatbotId], references: [id])
  chatbotId  Int
  messages   Message[]
}

model Message {
  id             Int          @id @default(autoincrement())
  content        String
  role           Role
  createdAt      DateTime     @default(now())
  
  // Relations
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  conversationId Int
}

enum Role {
  user
  assistant
}
